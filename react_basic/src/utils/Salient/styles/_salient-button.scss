// Import the 'sass:color' module
@use 'sass:color';

/* Color Template */
$button-blueBlur-borderColor: rgb(249 250 251 / 55%); 
$button-blueBlur-bgColor: rgb(146 151 179 / 13%);
$button-blueBlur-bghoverColor: rgba(16 18 27 / 40%);

$button-text-color: whitesmoke;

$button-blur-bgColor: hsla(0, 0%, 100%, 0.25);

$button-clear-borderColor: rgba(255, 255, 255, .1);
$button-clear-bgColor: rgba(255, 255, 255, .1);
$button-clear-bgHoverColor: rgba(255, 255, 255, 0.2);
$button-clear-borderHoverColor: rgba(255, 255, 255, 0.3);


/* Toggle checkbox */
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
	// General Style for Checkbox and Radio Button
	input[type='checkbox'], input[type='radio'] {
		--active: #275EFE;
		--active-inner: #fff;
		--focus: 2px rgba(39, 94, 254, 0.3);
		--border: #BBC1E1;
		--border-hover: #275EFE;
		--background: #fff;
		--disabled: #F6F8FF;
		--disabled-inner: #E1E6F9;
		-webkit-appearance: none;
		-moz-appearance: none;
		height: 21px;
		outline: none;
		display: inline-block;
		vertical-align: top;
		position: relative;
		margin: 0;
		cursor: pointer;
		border: 1px solid var(--bc, var(--border));
		background-color: var(--b, var(--background));
		transition: background-color .3s, border-color .3s, box-shadow .2s;
	}

	input[type='checkbox']:after,
    input[type='radio']:after {
		content: '';
		display: block;
		left: 0;
		top: 0;
		position: absolute;
		transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
	}

	input[type='checkbox']:checked,
    input[type='radio']:checked {
		--b: var(--active);
		--bc: var(--active);
		--d-o: .3s;
		--d-t: .6s;
		--d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
	}

	input[type='checkbox']:disabled,
    input[type='radio']:disabled {
		--b: var(--disabled);
		cursor: not-allowed;
		opacity: .9;
	}

	input[type='checkbox']:disabled:checked,
      input[type='radio']:disabled:checked {
		--b: var(--disabled-inner);
		--bc: var(--border);
	}

	input[type='checkbox']:disabled + label,
      input[type='radio']:disabled + label {
		cursor: not-allowed;
	}

	input[type='checkbox']:hover:not(:checked):not(:disabled),
    input[type='radio']:hover:not(:checked):not(:disabled) {
		--bc: var(--border-hover);
	}

	input[type='checkbox']:focus,
    input[type='radio']:focus {
		box-shadow: 0 0 0 var(--focus);
	}

	input[type='checkbox']:not(.switch),
    input[type='radio']:not(.switch) {
		width: 21px;
	}

	input[type='checkbox']:not(.switch):after,
      input[type='radio']:not(.switch):after {
		opacity: var(--o, 0);
	}

	input[type='checkbox']:not(.switch):checked,
      input[type='radio']:not(.switch):checked {
		--o: 1;
	}

	input[type='checkbox'] + label,
    input[type='radio'] + label {
		font-size: 14px;
		line-height: 21px;
		display: inline-block;
		vertical-align: top;
		cursor: pointer;
		margin-left: 4px;
	}

	input[type='checkbox']:not(.switch) {
		border-radius: 7px;
	}

	input[type='checkbox']:not(.switch):after {
		width: 5px;
		height: 9px;
		border: 2px solid var(--active-inner);
		border-top: 0;
		border-left: 0;
		left: 7px;
		top: 4px;
		transform: rotate(var(--r, 20deg));
	}

	input[type='checkbox']:not(.switch):checked {
		--r: 43deg;
	}

	// Specific to Switch Type Toggle Button
	input[type='checkbox'].switch {
		width: 38px;
		border-radius: 11px;
	}

	input[type='checkbox'].switch:after {
		left: 2px;
		top: 2px;
		border-radius: 50%;
		width: 15px;
		height: 15px;
		background: var(--ab, var(--border));
		transform: translateX(var(--x, 0));
	}

	input[type='checkbox'].switch:checked {
		--ab: var(--active-inner);
		--x: 17px;
	}

	input[type='checkbox'].switch:disabled:not(:checked):after {
		opacity: .6;
	}

	input[type='checkbox'].switch.slider-dark {
		--active: #131339;
		--border: #d2d9ef;
		--focus: #d2d9ef;
		--border-hover: #131339;
	}

	input[type=checkbox].switch.slider-dark:after {
		background: var(--ab, #131339);
	}


	// Specific to Radio Button
	input[type='radio'] {
		border-radius: 50%;
	}

	input[type='radio']:after {
		width: 19px;
		height: 19px;
		border-radius: 50%;
		background: var(--active-inner);
		opacity: 0;
		transform: scale(var(--s, 0.7));
	}

	input[type='radio']:checked {
		--s: .5;
	}

}


/** Normal Button */
.button {
	text-decoration: none;
	cursor: pointer;
	padding: 8px 26px;
	//color: $button-text-color;
}

.btn-block {
	display: block;
}

.btn-expand-full {
	width: 100%;
}

.btn-blur{
    border: 0;
    font-weight: 500;
    font-family: inherit;
    border-radius: 0.5rem;
    background: $button-blueBlur-bgColor;
    backdrop-filter: blur(12px);
    
}

.btn-blur:hover:enabled{
    opacity: 0.7;
}

.btn-blue-blur {
    background: $button-blueBlur-bgColor;
    //color: rgb(249 250 251 / 55%);
    border: 1px solid $button-blueBlur-borderColor;
    border-radius: 20px;
    transition: 0.3s;
    white-space: nowrap;
}

.btn-blue-blur:hover:enabled{
    background-color: $button-blueBlur-bghoverColor
}

.clear-button {
    -webkit-backdrop-filter: blur(3px);
    backdrop-filter: blur(3px);
    background-color: $button-clear-bgColor;
    border: 1px solid $button-clear-borderColor;
    border-radius: 100px;
    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);;
    outline: none;
}
  
.clear-button:hover:enabled {
	background-color: $button-clear-bgHoverColor;
	border: 1px solid $button-clear-borderHoverColor;
}

.inverse {
	//color: color.invert($button-text-color);

	&.btn-blur {
		background-color: color.invert($button-blur-bgColor);
	}

	&.btn-blue-blur {
		border-color: color.invert($button-blueBlur-borderColor);
		background-color: color.invert($button-blueBlur-bgColor);

		&:hover:enabled {
			background-color: color.invert($button-blueBlur-bghoverColor);
		}
	}

	&.clear-button {
		border-color: color.invert($button-clear-borderColor);
		background-color: color.invert($button-clear-bgColor);

		&:hover:enabled {
			background-color: color.invert($button-clear-bgHoverColor);
			border-color: color.invert($button-clear-borderHoverColor);
		}
	}
}


/* Button Display */
.btn-group {
	display: flex;
	flex-direction: row;
	position: relative;
}


/* Button Icon **/
.btn-icon-wrapper {
	border-radius: 50%;
	box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
	background-color: rgba(255, 255, 255, 0.5);
	color: rgba(0, 0, 0, 0.7);
	border: 2px solid rgba(0, 0, 0, 0.6);
	width: 3em;
	height: 3em;
	display: flex;
	align-content: center;
	justify-content: center;
	cursor: pointer;
}
  
.btn-icon-wrapper:hover:enabled {
	background-color: rgba(255, 255, 255, 0.3);
}
  
$arrow-line-width: .1em;
$arrow-head-width: .6em;

.left-arrow-icon,
.right-arrow-icon {
	width: 20px;
	height: $arrow-line-width;
}

.left-arrow-icon,
.right-arrow-icon,
.top-arrow-icon,
.bottom-arrow-icon {
	position: relative;
	margin: auto;
	background-color: rgb(35, 35, 35);
	line-height: 1;
}

.top-arrow-icon,
.bottom-arrow-icon {
	width: $arrow-line-width;
	height: 20px;
}

.left-arrow-icon::before {
	content: "";
	position: absolute;
	left: calc($arrow-line-width/2);
	top: calc($arrow-line-width/2);
	width: $arrow-head-width;
	height: $arrow-head-width;
	border-top: solid $arrow-line-width rgb(35, 35, 35);;
	border-right: solid $arrow-line-width rgb(35, 35, 35);;
	transform: translateY(-50%) rotate(-135deg);
}

.right-arrow-icon::before {
	content: "";
	position: absolute;
	right: calc($arrow-line-width/2);
	top: calc($arrow-line-width/2);
	width: $arrow-head-width;
	height: $arrow-head-width;
	border-bottom: solid $arrow-line-width rgb(35, 35, 35);;
	border-left: solid $arrow-line-width rgb(35, 35, 35);;
	transform: translateY(-50%) rotate(-135deg);
}

.top-arrow-icon::before {
	content: "";
	position: absolute;
	left: -#{calc($arrow-head-width/2)};
	top: calc($arrow-line-width/2);
	width: $arrow-head-width;
	height: $arrow-head-width;
	border-bottom: solid $arrow-line-width rgb(35, 35, 35);;
	border-left: solid $arrow-line-width rgb(35, 35, 35);;
	transform: rotate(135deg);
}

.bottom-arrow-icon::before {
	content: "";
	position: absolute;
	left: -#{calc($arrow-head-width/2)};
	bottom: calc($arrow-line-width/2);
	width: $arrow-head-width;
	height: $arrow-head-width;
	border-top: solid $arrow-line-width rgb(35, 35, 35);;
	border-right: solid $arrow-line-width rgb(35, 35, 35);;
	transform: rotate(135deg);
}